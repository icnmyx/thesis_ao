import numpy as np
import closed_loop_r0 as clr
from docopt import docopt
import os

import matplotlib.pyplot as plt
import random
#from experiment_int_test import Model, ImageDataset
import torch
from collections import deque
from torch.utils.data import Dataset, DataLoader, TensorDataset
from torchvision import transforms
import torch.nn as nn
from models import Model, Model2, ModelA
from datetime import datetime

"""
script to get avg and var of model against whole dataset

"""
device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
isCategorical = False

savepath="data"
dir = os.path.join(os.path.dirname(__file__), savepath)

# Load Data
closed = True
samples = 10000
img_data = []
label_data = []

'''
if closed:
    codes = ['r0.05_1202', 'r0.06_8449', 'r0.07_5284', 'r0.08_3219', 'r0.09_2483', 'r0.1_9502', 'r0.11_6639', 'r0.12_1687', 'r0.13_8069', 'r0.14_1138', 'r0.15_2556', 'r0.16_1030', 'r0.17_815', 'r0.18_5519', 'r0.19_4963', 'r0.2_6184']
else:
    codes = ['r0.05_8843', 'r0.06_4722', 'r0.07_9303', 'r0.08_90', 'r0.09_8354', 'r0.1_465', 'r0.11_5733', 'r0.12_2390', 'r0.13_2516', 'r0.14_8165', 'r0.15_4511', 'r0.16_753', 'r0.17_2428', 'r0.18_8208', 'r0.19_9645', 'r0.2_9616']

for c in codes:
    if closed: 
        path = os.path.join(dir, f'wfs_data_closed_{c}_{samples}.npz')
    else:
        path = os.path.join(dir, f'wfs_data_open_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0']]
    label_data = [*label_data, *container['arr_1']]

'''

#12 -1
codes = ['r0.1_7834', 'r0.2_1643', 'r0.05_1958', 'r0.06_6633', 'r0.07_4704', 'r0.08_3648', 'r0.09_4775', 'r0.11_6204', 'r0.12_9936', 'r0.13_1335', 'r0.14_5487', 'r0.15_342', 'r0.16_917', 'r0.17_2617', 'r0.18_9855', 'r0.19_8745']
for c in codes:
    path = os.path.join(dir, f'wfs_12_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#12 0
codes = ['r0.1_4315', 'r0.2_7389', 'r0.05_5859', 'r0.06_2038', 'r0.07_3557', 'r0.08_4154', 'r0.09_543', 'r0.11_3025', 'r0.12_9259', 'r0.13_8593', 'r0.14_306', 'r0.15_8663', 'r0.16_6721', 'r0.17_5209', 'r0.18_5820', 'r0.19_198']
for c in codes:
    path = os.path.join(dir, f'wfs_12_0_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#12 1
codes = ['r0.1_5953', 'r0.2_4925', 'r0.05_175', 'r0.06_9949', 'r0.07_2718', 'r0.08_7299', 'r0.09_159', 'r0.11_7112', 'r0.12_9386', 'r0.13_5111', 'r0.14_4883', 'r0.15_5038', 'r0.16_7520', 'r0.17_5652', 'r0.18_8290', 'r0.19_3348']
for c in codes:

    path = os.path.join(dir, f'wfs_12_1_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]
'''
#10
codes = ['r0.1_9746', 'r0.2_7532', 'r0.05_6296', 'r0.06_5482', 'r0.07_4990', 'r0.08_350', 'r0.09_1643', 'r0.11_5367', 'r0.12_8109', 'r0.13_5006', 'r0.14_1316', 'r0.15_9154', 'r0.16_556', 'r0.17_5281', 'r0.18_880', 'r0.19_274']
for c in codes:
    path = os.path.join(dir, f'wfs_10_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#11
codes = ['r0.1_2822', 'r0.2_6909', 'r0.05_2143', 'r0.06_1809', 'r0.07_3491', 'r0.08_4847', 'r0.09_682', 'r0.11_286', 'r0.12_7566', 'r0.13_9282', 'r0.14_2266', 'r0.15_1016', 'r0.16_7633', 'r0.17_8709', 'r0.18_4488', 'r0.19_185']
for c in codes:
    path = os.path.join(dir, f'wfs_11_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#13
codes = ['r0.1_8810', 'r0.2_6928', 'r0.05_6824', 'r0.06_4444', 'r0.07_2229', 'r0.08_513', 'r0.09_6413', 'r0.11_785', 'r0.12_4280', 'r0.13_1983', 'r0.14_2398', 'r0.15_6067', 'r0.16_339', 'r0.17_5196', 'r0.18_9842', 'r0.19_2439']
for c in codes:
    path = os.path.join(dir, f'wfs_13_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#14
codes = ['r0.1_8016', 'r0.2_3966', 'r0.05_6566', 'r0.06_4163', 'r0.07_5665', 'r0.08_2179', 'r0.09_3026', 'r0.11_4586', 'r0.12_9475', 'r0.13_5624', 'r0.14_2336', 'r0.15_9541', 'r0.16_979', 'r0.17_1263', 'r0.18_6431', 'r0.19_7177']
for c in codes:
    path = os.path.join(dir, f'wfs_14_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]

#pyr
codes = ['r0.1_9658', 'r0.2_8679', 'r0.05_7587', 'r0.06_4624', 'r0.07_4623', 'r0.08_9073', 'r0.09_2145', 'r0.11_1569', 'r0.12_622', 'r0.13_8310', 'r0.14_964', 'r0.15_6140', 'r0.16_7664', 'r0.17_5502', 'r0.18_5946', 'r0.19_144']
for c in codes:
    path = os.path.join(dir, f'pyr_3_closed_{c}_{samples}.npz')
    container = np.load(path)
    img_data = [*img_data, *container['arr_0'][:3333]]
    label_data = [*label_data, *container['arr_1'][:3333]]
'''

# Data Engineering

f_label_data = [np.round(ld, 2) for ld in label_data]
classes = set(np.unique(f_label_data))
print("data loaded")

# Normlisation
print(np.max(img_data))
#X = img_data / (np.max(img_data)*1.1)
# 3 = 1124599.2
# 12 incl noise = 308.80664
# 12 excl noise = 273.5929
X = np.array(img_data) / (273.5929 * 1.1)
y = f_label_data


'''
if isCategorical:
  # convert labels to one-hot
  label_encoder = LabelEncoder()
  integer_encoded = label_encoder.fit_transform(f_label_data)
  integer_encoded = integer_encoded.reshape(len(integer_encoded), 1)

  onehot_encoder = OneHotEncoder(sparse=False)
  onehot_encoded = onehot_encoder.fit_transform(integer_encoded)
  y = onehot_encoded
else: 
  y = f_label_data
'''

batch_size = 64
dl = DataLoader(TensorDataset(torch.Tensor(X), torch.Tensor(y)), batch_size=batch_size)

# Load Model
#best_path = os.path.join(os.path.join(os.path.dirname(__file__), "checkpoints"), 'best_model_1506_1.pth')
best_path = os.path.join(os.path.join(os.path.dirname(__file__), "checkpoints"), 'best_model_2106_1.pth')
#best_path = os.path.join(os.path.join(os.path.dirname(__file__), "checkpoints"), 'best_model_2806_2.pth')
net = ModelA()
net.load_state_dict(torch.load(best_path))
net.to(device)
net.eval()

# Eval
if __name__ == "__main__":
  # Function to evaluate the model on the entire dataset
  def evaluate_model(model, data_loader):
      #criterion = nn.MSELoss()
      criterion = nn.L1Loss()
      device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
      model = model.to(device)
      model.eval()

      total_loss = 0.0
      predictions = []
      predictions_by_label = {}
      with torch.no_grad():
          for i, data in enumerate(dl, 0):
              inputs, labels = data
              inputs, labels = inputs.to(device), labels.to(device)

              inputs = inputs.float()
              outputs = torch.flatten(model(inputs))

              loss = criterion(outputs, labels)
              total_loss += loss.item()

              if isCategorical:
                 _, predicted = torch.max(outputs.data, 1).cpu().numpy()
              else:
                 predicted = outputs.cpu().numpy()

              #print(predicted)
              #print(labels)
              
              for i in range(len(labels)):
                  label = labels[i].item()
                  if label not in predictions_by_label:
                      predictions_by_label[label] = []
                  predictions_by_label[label].append(predicted[i])

              predictions.extend(predicted)

      avg_loss = total_loss / len(data_loader)
      return avg_loss, predictions, predictions_by_label
  

  # Evaluate the model on the entire dataset
  avg_loss, predictions, predictions_by_label = evaluate_model(net, dl)

  # Measure variance of the predictions
  #variance = torch.var(torch.tensor(predictions)).item()

  # Print average loss and variance
  print("Average Loss:", avg_loss)
  #print("Variance of Predictions:", variance)
  
  #print("Variance of Predictions by Label:")

  thresholds = [0.001, 0.002, 0.005, 0.01]
  
  # Visualize the distribution of predictions for each label
  plt.figure(figsize=(10, 6))
  res = {}
  for label, pred in sorted(predictions_by_label.items(), key=lambda item: item[1]):

    values, bins, _ = plt.hist(pred, bins='auto', alpha=0.5, label=f"{np.round(label,2)}")
    plt.axvline(label, alpha=0.5, color='k', linestyle='dashed', linewidth=1)

    total_values = len(pred)

    print(f"r0: {round(label, 2)} - avg: {np.mean(pred)} - var: {np.var(pred)}")

    
    for t in thresholds:
        lower = label - t
        upper = label + t
        in_range = np.sum([1 if (p >= lower) & (p <= upper) else 0 for p in pred])
        perc = (in_range / total_values) * 100
        #print(f"{perc:.2f}% of predictions within range {t}")
        if str(t) in res:
          temp = res[str(t)]
          temp.append(round(perc, 2))
          res[str(t)] = temp
        else:
          res[str(t)] = [round(perc, 2)]

    #for i in range(len(percentage_dist)):
    #    plt.text(bins[i], percentage_dist[i] + 1, f'{percentage_dist[i]:.1f}%', ha='center',va='bottom', fontsize=8)
    
    #print(f"r0: {np.round(label,2)} - Variance: {torch.var(torch.tensor(pred)).item()}")

  print(res)
  plt.xlabel("Predicted Value")
  plt.ylabel("Frequency")
  plt.title("Distribution of Predictions by True r0")
  plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))
  # Get the current timestamp
  current_time = datetime.now().strftime("%Y%m%d%H%M")

  # Save the plot as an image with the current time as the file name
  file_name = f"eval_var_{current_time}.png"
  plt.savefig(file_name)

  plt.show()


'''
0206
Average Loss: 0.002045665226550773
r0: 0.05 - avg: 0.05043439194560051 - var: 3.5068023862550035e-06
r0: 0.06 - avg: 0.06001146882772446 - var: 4.130076831643237e-06
r0: 0.07 - avg: 0.0701899304986 - var: 3.7550942124653375e-06
r0: 0.08 - avg: 0.07998499274253845 - var: 3.7704151054640533e-06
r0: 0.09 - avg: 0.09025859087705612 - var: 3.2425195968244225e-06
r0: 0.1 - avg: 0.10032706707715988 - var: 4.0003137655730825e-06
r0: 0.11 - avg: 0.11041288077831268 - var: 4.572123089019442e-06
r0: 0.12 - avg: 0.12044746428728104 - var: 5.35617118657683e-06
r0: 0.13 - avg: 0.13023741543293 - var: 6.2963986238173675e-06
r0: 0.14 - avg: 0.14046548306941986 - var: 7.427729087794432e-06
r0: 0.15 - avg: 0.1504669338464737 - var: 8.831955710775219e-06
r0: 0.16 - avg: 0.16026423871517181 - var: 1.0302168448106386e-05
r0: 0.17 - avg: 0.17022451758384705 - var: 1.149717081716517e-05
r0: 0.18 - avg: 0.1802651733160019 - var: 1.1531071322679054e-05
r0: 0.19 - avg: 0.1897476315498352 - var: 1.0973627468047198e-05
r0: 0.2 - avg: 0.1986747533082962 - var: 9.775171747605782e-06
{'0.001': [39.73, 38.35, 39.90, 40.30, 42.6, 39.68, 35.78, 33.43, 31.94, 28.44, 26.55, 25.37, 22.89, 23.44, 24.15, 24.15],
 '0.002': [70.17, 67.9, 70.35, 71.27, 73.13, 68.36, 64.34, 61.0, 57.88, 53.22, 50.1, 48.24, 43.96, 44.52, 46.26, 45.64],
 '0.005': [99.19, 98.42, 98.75, 98.67, 99.4, 98.56, 97.7, 96.7, 95.3, 92.76, 90.19, 87.86, 86.04, 85.54, 87.46, 86.07],
 '0.01': [100.0, 100.0, 100.0, 99.99, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 99.86, 99.72, 99.71, 99.73, 99.58, 99.6]}

1506 (closed)
Average Loss: 0.0016999023599317297
r0: 0.05 - avg: 0.04961829259991646 - var: 1.4405572983378079e-06
r0: 0.06 - avg: 0.05931463465094566 - var: 2.5903962068696273e-06
r0: 0.07 - avg: 0.06973534822463989 - var: 2.2733129299012944e-06
r0: 0.08 - avg: 0.07968365401029587 - var: 2.446368398523191e-06
r0: 0.09 - avg: 0.09036508947610855 - var: 2.4145151655829977e-06
r0: 0.1 - avg: 0.10043637454509735 - var: 2.6910679480351973e-06
r0: 0.11 - avg: 0.10986917465925217 - var: 2.6786367470776895e-06
r0: 0.12 - avg: 0.11904612183570862 - var: 3.179570740030613e-06
r0: 0.13 - avg: 0.12874583899974823 - var: 3.7740276184194954e-06
r0: 0.14 - avg: 0.13885025680065155 - var: 4.445868398761377e-06
r0: 0.15 - avg: 0.14903776347637177 - var: 5.3434732762980275e-06
r0: 0.16 - avg: 0.1592549830675125 - var: 6.3222528297046665e-06
r0: 0.17 - avg: 0.1697094589471817 - var: 7.656590241822414e-06
r0: 0.18 - avg: 0.1802009493112564 - var: 8.129758498398587e-06
r0: 0.19 - avg: 0.189994677901268 - var: 7.782503416819964e-06
r0: 0.2 - avg: 0.19861596822738647 - var: 5.891980435990263e-06
{'0.001': [56.29, 44.62, 49.07, 49.0, 47.71, 45.47, 46.68, 37.33, 32.39, 31.94, 30.66, 29.25, 27.94, 27.16, 27.76, 29.01],
 '0.002': [88.95, 75.82, 81.4, 80.3, 79.17, 76.13, 78.44, 67.55, 60.57, 59.18, 57.24, 55.61, 53.12, 51.57, 52.11, 53.81],
 '0.005': [99.97, 99.19, 99.84, 99.61, 99.75, 99.57, 99.66, 98.79, 97.16, 96.42, 95.53, 94.25, 92.85, 91.94, 92.81, 92.4],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.99, 99.98, 99.96, 100.0, 99.96, 99.93]}

1906 (open)
Average Loss: 0.0016211806989973412
r0: 0.05 - avg: 0.051297035068273544 - var: 1.332604483650357e-06
r0: 0.06 - avg: 0.060676515102386475 - var: 1.908332478706143e-06
r0: 0.07 - avg: 0.07044843584299088 - var: 1.9542767404345796e-06
r0: 0.08 - avg: 0.07990199327468872 - var: 1.98229395209637e-06
r0: 0.11 - avg: 0.10964389890432358 - var: 2.77444041785202e-06
r0: 0.12 - avg: 0.11975124478340149 - var: 3.170621312165167e-06
r0: 0.13 - avg: 0.1300373077392578 - var: 3.6478627407632302e-06
r0: 0.14 - avg: 0.14025495946407318 - var: 3.992317033407744e-06
r0: 0.15 - avg: 0.1504710465669632 - var: 4.4174676077091135e-06
r0: 0.16 - avg: 0.16080403327941895 - var: 5.081887138658203e-06
r0: 0.17 - avg: 0.1713593453168869 - var: 5.694986612070352e-06
r0: 0.18 - avg: 0.18186479806900024 - var: 6.253122592170257e-06
r0: 0.19 - avg: 0.19188684225082397 - var: 5.911998869123636e-06
r0: 0.2 - avg: 0.2004615068435669 - var: 4.719258413388161e-06
{'0.001': [37.13, 47.14, 49.81, 52.24, 50.14, 48.98, 44.51, 42.49, 40.57, 38.25, 36.26, 32.36, 27.66, 24.55, 22.82, 35.03],
 '0.002': [73.0, 80.08, 82.73, 84.68, 81.95, 80.7, 76.61, 73.52, 70.6, 68.28, 64.69, 59.61, 52.42, 46.14, 45.61, 62.96],
 '0.005': [99.87, 99.97, 99.96, 99.88, 99.88, 99.87, 99.6, 99.4, 99.02, 98.65, 97.87, 96.29, 93.26, 89.33, 89.86, 97.43],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.91, 99.96, 100.0]}
'''



'''
1506 (closed) m10 (/1757.3783 *1.1) 202307041814
Average Loss: 0.0018540484343858646
r0: 0.05 - avg: 0.049530450254678726 - var: 1.5176908618741436e-06
r0: 0.06 - avg: 0.05914852395653725 - var: 3.4459360449545784e-06
r0: 0.07 - avg: 0.0703674703836441 - var: 2.3066756966727553e-06
r0: 0.08 - avg: 0.080095574259758 - var: 2.427465688015218e-06
r0: 0.09 - avg: 0.09025894850492477 - var: 2.6264235657436075e-06
r0: 0.1 - avg: 0.10042314231395721 - var: 3.0481312478514155e-06
r0: 0.11 - avg: 0.10973641276359558 - var: 3.188621576555306e-06
r0: 0.12 - avg: 0.11888420581817627 - var: 3.5219031815358903e-06
r0: 0.13 - avg: 0.12857401371002197 - var: 4.9105942707683425e-06
r0: 0.14 - avg: 0.13870973885059357 - var: 5.36206516699167e-06
r0: 0.15 - avg: 0.14871613681316376 - var: 6.27967665423057e-06
r0: 0.16 - avg: 0.15911130607128143 - var: 7.331983852054691e-06
r0: 0.17 - avg: 0.16955700516700745 - var: 9.075309208128601e-06
r0: 0.18 - avg: 0.18022464215755463 - var: 9.861162652669009e-06
r0: 0.19 - avg: 0.19000649452209473 - var: 9.372428394271992e-06
r0: 0.2 - avg: 0.19856016337871552 - var: 7.07471872374299e-06
{'0.001': [52.78, 39.39, 48.0, 48.33, 46.86, 40.86, 41.73, 35.16, 29.67, 29.61, 26.88, 27.33, 24.87, 25.74, 24.9, 28.2],
 '0.002': [87.25, 68.71, 79.51, 80.05, 77.41, 72.67, 72.58, 63.46, 53.41, 54.31, 52.24, 51.07, 48.0, 47.46, 47.67, 52.0],
 '0.005': [100.0, 98.41, 99.91, 99.91, 99.82, 99.61, 99.52, 97.84, 94.54, 94.15, 92.17, 92.11, 90.07, 88.12, 90.34, 89.68],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.94, 99.88, 99.97, 99.82, 99.88]}


1506 (closed) m11 (/695.3906 *1.1) 202307041829
Average Loss: 0.0018749883058101244
r0: 0.05 - avg: 0.049475617706775665 - var: 1.4687711882288568e-06
r0: 0.06 - avg: 0.058942560106515884 - var: 3.4655415674933465e-06
r0: 0.07 - avg: 0.06964872032403946 - var: 2.469945457050926e-06
r0: 0.08 - avg: 0.07998684048652649 - var: 2.377408236498013e-06
r0: 0.09 - avg: 0.09011754393577576 - var: 2.84978591480467e-06
r0: 0.1 - avg: 0.10025455802679062 - var: 2.9306661417649593e-06
r0: 0.11 - avg: 0.10960040986537933 - var: 3.21309585160634e-06
r0: 0.12 - avg: 0.1187419667840004 - var: 3.653284466054174e-06
r0: 0.13 - avg: 0.1284189373254776 - var: 4.5345914259087294e-06
r0: 0.14 - avg: 0.13854119181632996 - var: 5.13392842549365e-06
r0: 0.15 - avg: 0.1486985832452774 - var: 6.0094457694503944e-06
r0: 0.16 - avg: 0.15905643999576569 - var: 7.45728129913914e-06
r0: 0.17 - avg: 0.16953973472118378 - var: 9.056796443474013e-06
r0: 0.18 - avg: 0.18013012409210205 - var: 9.732879334478639e-06
r0: 0.19 - avg: 0.18991827964782715 - var: 9.85516089713201e-06
r0: 0.2 - avg: 0.19852042198181152 - var: 7.0576411417277995e-06
{'0.001': [54.34, 37.35, 48.36, 48.48, 44.46, 43.62, 41.25, 32.01, 29.4, 28.44, 26.91, 25.83, 25.56, 24.03, 25.32, 28.14],
 '0.002': [86.8, 66.97, 79.12, 80.44, 76.12, 74.44, 71.71, 60.7, 54.64, 54.46, 51.82, 50.38, 47.55, 46.95, 45.87, 52.39],
 '0.005': [100.0, 97.36, 99.7, 99.91, 99.52, 99.76, 99.43, 97.48, 94.03, 93.7, 93.01, 91.72, 90.01, 89.44, 89.29, 90.31],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 100.0, 100.0, 100.0, 99.94, 99.94, 99.91, 99.82]}


1506 (closed) m12 (/273.5929 *1.1) 202307041835
Average Loss: 0.0019397500344625802
r0: 0.05 - avg: 0.04929568991065025 - var: 1.4056789723326801e-06
r0: 0.06 - avg: 0.05880296975374222 - var: 3.6157523481961107e-06
r0: 0.07 - avg: 0.06947161257266998 - var: 2.4458577172481455e-06
r0: 0.08 - avg: 0.07928250730037689 - var: 3.857328920275904e-06
r0: 0.09 - avg: 0.08997057378292084 - var: 2.805012627504766e-06
r0: 0.1 - avg: 0.10007970780134201 - var: 3.11189819512947e-06
r0: 0.11 - avg: 0.10941572487354279 - var: 3.1172407943813596e-06
r0: 0.12 - avg: 0.11853567510843277 - var: 3.5012826629099436e-06
r0: 0.13 - avg: 0.12825573980808258 - var: 4.667796474677743e-06
r0: 0.14 - avg: 0.13826528191566467 - var: 5.3808225857210346e-06
r0: 0.15 - avg: 0.14852571487426758 - var: 6.023900368745672e-06
r0: 0.16 - avg: 0.15883930027484894 - var: 7.4619342740334105e-06
r0: 0.17 - avg: 0.16923119127750397 - var: 8.57933446241077e-06
r0: 0.18 - avg: 0.17996253073215485 - var: 1.0070915777760092e-05
r0: 0.19 - avg: 0.18985310196876526 - var: 9.640245480113663e-06
r0: 0.2 - avg: 0.1983897089958191 - var: 6.662183750449913e-06
{'0.001': [50.98, 35.85, 46.59, 40.17, 45.75, 42.66, 40.56, 30.15, 26.91, 26.61, 26.61, 25.8, 26.01, 23.64, 24.72, 27.15],
 '0.002': [85.51, 63.19, 78.97, 68.56, 76.84, 74.29, 72.52, 58.57, 50.41, 50.83, 52.09, 50.32, 49.23, 45.69, 47.43, 51.82],
 '0.005': [100.0, 97.15, 99.52, 97.9, 99.55, 99.4, 98.98, 96.73, 92.98, 91.93, 91.78, 90.82, 89.47, 88.27, 89.38, 89.47],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 99.94, 99.94, 99.91, 99.91, 99.85, 99.79]}


1506 (closed) m13 (/110.96724 *1.1) 202307041832
Average Loss: 0.0018499573337849972
r0: 0.05 - avg: 0.049532949924468994 - var: 1.4439499409490963e-06
r0: 0.06 - avg: 0.05913309380412102 - var: 3.4963754842465278e-06
r0: 0.07 - avg: 0.06969001889228821 - var: 2.545957840993651e-06
r0: 0.08 - avg: 0.08017730712890625 - var: 2.483031266820035e-06
r0: 0.09 - avg: 0.09026806056499481 - var: 2.7119235710415523e-06
r0: 0.1 - avg: 0.10036331415176392 - var: 2.925697572209174e-06
r0: 0.11 - avg: 0.10974520444869995 - var: 3.1999620659917127e-06
r0: 0.12 - avg: 0.1189212054014206 - var: 3.745321919268463e-06
r0: 0.13 - avg: 0.1285545825958252 - var: 4.6061300054134335e-06
r0: 0.14 - avg: 0.13871066272258759 - var: 5.48365414942964e-06
r0: 0.15 - avg: 0.14881673455238342 - var: 6.1176410781627055e-06
r0: 0.16 - avg: 0.159291610121727 - var: 7.076351721480023e-06
r0: 0.17 - avg: 0.1696089506149292 - var: 8.778614756010938e-06
r0: 0.18 - avg: 0.18015757203102112 - var: 9.92686727840919e-06
r0: 0.19 - avg: 0.19000960886478424 - var: 9.800262887438294e-06
r0: 0.2 - avg: 0.19852274656295776 - var: 7.174167421908351e-06
{'0.001': [54.97, 39.09, 48.42, 46.35, 43.32, 42.81, 43.08, 35.43, 29.1, 29.28, 28.68, 27.48, 24.27, 26.07, 24.15, 28.02],
 '0.002': [87.94, 68.17, 79.24, 79.09, 76.51, 74.53, 72.58, 63.64, 55.87, 53.74, 52.87, 52.3, 49.02, 47.34, 45.78, 51.73],
 '0.005': [100.0, 98.29, 99.61, 99.91, 99.82, 99.64, 99.25, 97.63, 94.87, 93.76, 93.01, 93.31, 90.58, 88.45, 89.41, 89.26],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 100.0, 99.97, 99.94, 99.94, 99.88, 99.88]}


1506 (closed) m14 (/45.034176 *1.1) 202307041833
Average Loss: 0.0018218269692962805
r0: 0.05 - avg: 0.049830399453639984 - var: 1.5708641285527847e-06
r0: 0.06 - avg: 0.05946493521332741 - var: 3.2310542792401975e-06
r0: 0.07 - avg: 0.06992019712924957 - var: 2.517489292586106e-06
r0: 0.08 - avg: 0.08006932586431503 - var: 3.818614459305536e-06
r0: 0.09 - avg: 0.09054361283779144 - var: 2.673944209163892e-06
r0: 0.1 - avg: 0.10073104500770569 - var: 2.908966052928008e-06
r0: 0.11 - avg: 0.11004997789859772 - var: 3.2258772080240306e-06
r0: 0.12 - avg: 0.11926165223121643 - var: 3.6133944831817644e-06
r0: 0.13 - avg: 0.12900333106517792 - var: 4.562449703371385e-06
r0: 0.14 - avg: 0.13910745084285736 - var: 5.22783648193581e-06
r0: 0.15 - avg: 0.14925725758075714 - var: 6.052163826097967e-06
r0: 0.16 - avg: 0.15954197943210602 - var: 7.531409210059792e-06
r0: 0.17 - avg: 0.17001962661743164 - var: 9.02504052646691e-06
r0: 0.18 - avg: 0.18056762218475342 - var: 1.0203446436207741e-05
r0: 0.19 - avg: 0.19031305611133575 - var: 9.66670449997764e-06
r0: 0.2 - avg: 0.19867631793022156 - var: 7.231273684737971e-06
{'0.001': [57.01, 41.82, 47.76, 45.15, 44.1, 40.83, 42.66, 37.5, 32.7, 32.94, 29.76, 27.93, 24.99, 23.04, 23.49, 27.57],
 '0.002': [88.6, 72.46, 80.74, 74.98, 75.76, 71.89, 73.81, 66.76, 60.13, 59.41, 56.89, 52.87, 48.51, 44.58, 45.78, 51.67],
 '0.005': [100.0, 98.92, 99.73, 97.12, 99.7, 99.28, 99.31, 98.8, 96.7, 95.71, 94.69, 93.25, 90.31, 87.88, 88.81, 90.01],
 '0.01': [100.0, 100.0, 100.0, 99.94, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.94, 99.94, 99.91, 99.97, 99.85]}

'''


'''
2106_1 (closed) -1 (/273.5929 *1.1) 202307041911
Average Loss: 0.002021584432846833
r0: 0.05 - avg: 0.049068253487348557 - var: 1.5876305496931309e-06
r0: 0.06 - avg: 0.0588538683950901 - var: 2.9464961244229926e-06
r0: 0.07 - avg: 0.06933704763650894 - var: 2.3855104700487573e-06
r0: 0.08 - avg: 0.07951392978429794 - var: 2.4851408397807973e-06
r0: 0.09 - avg: 0.08971785008907318 - var: 2.629114987939829e-06
r0: 0.1 - avg: 0.0999382808804512 - var: 2.852421175703057e-06
r0: 0.11 - avg: 0.11006438732147217 - var: 3.243957735321601e-06
r0: 0.12 - avg: 0.12020557373762131 - var: 3.757486638278351e-06
r0: 0.13 - avg: 0.13054011762142181 - var: 4.898204679193441e-06
r0: 0.14 - avg: 0.14084205031394958 - var: 5.942094048805302e-06
r0: 0.15 - avg: 0.15109175443649292 - var: 7.040105629130267e-06
r0: 0.16 - avg: 0.1612798571586609 - var: 9.22334220376797e-06
r0: 0.17 - avg: 0.17154903709888458 - var: 1.061016973835649e-05
r0: 0.18 - avg: 0.18194811046123505 - var: 1.275954218726838e-05
r0: 0.19 - avg: 0.19144713878631592 - var: 1.3483188922691625e-05
r0: 0.2 - avg: 0.2003720998764038 - var: 1.2253483873791993e-05
{'0.001': [44.82, 37.29, 47.04, 46.95, 45.72, 44.31, 43.08, 39.84, 35.04, 31.59, 26.46, 22.53, 20.64, 17.4, 18.57, 21.69],
 '0.002': [78.1, 67.0, 78.4, 77.89, 77.8, 75.7, 73.03, 70.03, 61.9, 57.67, 50.71, 43.56, 40.62, 34.89, 35.31, 41.28],
 '0.005': [99.94, 98.62, 99.46, 99.61, 99.7, 99.79, 99.31, 98.95, 97.15, 94.45, 92.02, 87.4, 83.11, 77.2, 78.16, 85.03],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.94, 99.91, 99.82, 99.61, 99.28, 99.61, 99.73]}


2106_1 (closed) 0 (/273.5929 *1.1) 202307041913
Average Loss: 0.005512470605323087
r0: 0.05 - avg: 0.05708472803235054 - var: 3.5651837606565095e-06
r0: 0.06 - avg: 0.06486080586910248 - var: 5.57564862901927e-06
r0: 0.07 - avg: 0.07419082522392273 - var: 7.1838326221040916e-06
r0: 0.08 - avg: 0.08441204577684402 - var: 9.960921488527674e-06
r0: 0.09 - avg: 0.0947851836681366 - var: 1.2674690879066475e-05
r0: 0.1 - avg: 0.10531622916460037 - var: 1.6147381757036783e-05
r0: 0.11 - avg: 0.11573494970798492 - var: 2.1710549845010974e-05
r0: 0.12 - avg: 0.1260797381401062 - var: 2.5350693249492906e-05
r0: 0.13 - avg: 0.13595876097679138 - var: 2.8773223675671034e-05
r0: 0.14 - avg: 0.1458428055047989 - var: 3.0409068131120875e-05
r0: 0.15 - avg: 0.15484628081321716 - var: 3.0404855351662263e-05
r0: 0.16 - avg: 0.1639946699142456 - var: 3.2548810850130394e-05
r0: 0.17 - avg: 0.17262697219848633 - var: 3.05493849737104e-05
r0: 0.18 - avg: 0.18137992918491364 - var: 2.8940070478711277e-05
r0: 0.19 - avg: 0.18920156359672546 - var: 2.4875791496015154e-05
r0: 0.2 - avg: 0.19639047980308533 - var: 1.9927285393350758e-05
{'0.001': [0.03, 4.89, 10.32, 11.19, 11.73, 10.65, 10.26, 9.84, 8.25, 8.61, 8.82, 9.42, 10.71, 11.46, 15.54, 15.33],
 '0.002': [0.27, 11.64, 20.79, 23.1, 21.84, 20.22, 18.99, 18.72, 17.16, 17.31, 18.51, 18.87, 22.11, 23.52, 29.91, 29.76],
 '0.005': [13.8, 51.82, 59.32, 53.41, 48.81, 44.52, 43.59, 41.16, 41.55, 39.87, 44.46, 47.13, 53.26, 59.11, 66.61, 63.04],
 '0.01': [93.79, 98.56, 99.28, 98.05, 94.27, 87.19, 79.12, 74.74, 73.84, 73.72, 80.95, 84.13, 90.34, 94.39, 95.65, 90.73]}


2106_1 (closed) 1 (/273.5929 *1.1) 202307041915
Average Loss: 0.03460918897450221
r0: 0.05 - avg: 0.0650901272892952 - var: 4.3004500184906647e-05
r0: 0.06 - avg: 0.08230650424957275 - var: 0.00010898743494180962
r0: 0.07 - avg: 0.1036691889166832 - var: 0.0001463605440221727
r0: 0.08 - avg: 0.12432458251714706 - var: 0.00016121086082421243
r0: 0.09 - avg: 0.14014016091823578 - var: 0.00015119965246412903
r0: 0.1 - avg: 0.15349416434764862 - var: 0.00014169156202115119
r0: 0.11 - avg: 0.16385821998119354 - var: 0.00013860304898116738
r0: 0.12 - avg: 0.17269276082515717 - var: 0.00013883778592571616
r0: 0.13 - avg: 0.1797170341014862 - var: 0.00014564325101673603
r0: 0.14 - avg: 0.18559148907661438 - var: 0.00013817872968502343
r0: 0.2 - avg: 0.1957882195711136 - var: 0.00010978078353218734
r0: 0.15 - avg: 0.18981504440307617 - var: 0.0001388060045428574
r0: 0.17 - avg: 0.19441083073616028 - var: 0.00012090703239664435
r0: 0.18 - avg: 0.1961245834827423 - var: 0.0001209397814818658
r0: 0.19 - avg: 0.19664564728736877 - var: 0.00012241880176588893
r0: 0.16 - avg: 0.19289299845695496 - var: 0.00013422478514257818
{'0.001': [0.33, 0.36, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.27, 0.0, 0.66, 2.94, 6.48, 0.03],
 '0.002': [0.6, 0.78, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.35, 0.0, 1.35, 5.61, 12.21, 0.12],
 '0.005': [4.98, 3.54, 0.24, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.58, 0.0, 3.6, 14.1, 31.23, 0.36],
 '0.01': [25.77, 14.28, 1.71, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 61.78, 0.06, 10.05, 29.16, 57.07, 1.86]}


2106_1 (closed) all (/273.5929 *1.1) 202307041924
Average Loss: 0.014055060232244431
r0: 0.05 - avg: 0.057081036269664764 - var: 5.8835852541960776e-05
r0: 0.06 - avg: 0.06867372989654541 - var: 0.00013811004464514554
r0: 0.07 - avg: 0.08239901810884476 - var: 0.00028211314929649234
r0: 0.08 - avg: 0.09608352184295654 - var: 0.0004606629954650998
r0: 0.09 - avg: 0.10821440070867538 - var: 0.0005694079445675015
r0: 0.1 - avg: 0.11958290636539459 - var: 0.000633371586445719
r0: 0.11 - avg: 0.12988586723804474 - var: 0.0006369394832290709
r0: 0.12 - avg: 0.1396593451499939 - var: 0.0006073358235880733
r0: 0.13 - avg: 0.14873865246772766 - var: 0.0005444959388114512
r0: 0.14 - avg: 0.15742544829845428 - var: 0.00045900719123892486
r0: 0.15 - avg: 0.16525103151798248 - var: 0.00036279516643844545
r0: 0.16 - avg: 0.17272250354290009 - var: 0.00026331812841817737
r0: 0.17 - avg: 0.17952896654605865 - var: 0.00016495108138769865
r0: 0.18 - avg: 0.1864842027425766 - var: 0.00010073540033772588
r0: 0.19 - avg: 0.19243144989013672 - var: 6.331274926196784e-05
r0: 0.2 - avg: 0.19751691818237305 - var: 5.145695467945188e-05
{'0.001': [15.06, 14.18, 19.12, 19.38, 19.15, 18.32, 17.78, 16.56, 14.43, 13.4, 11.76, 10.66, 10.67, 10.6, 13.53, 14.43],
 '0.002': [26.32, 26.47, 33.08, 33.66, 33.21, 31.97, 30.67, 29.58, 26.35, 24.99, 23.07, 20.85, 21.36, 21.34, 25.81, 28.13],
 '0.005': [39.57, 51.33, 53.01, 51.02, 49.5, 48.1, 47.63, 46.7, 46.23, 44.77, 45.49, 44.96, 46.65, 50.14, 58.67, 60.22],
 '0.01': [73.19, 70.95, 67.0, 66.04, 64.76, 62.4, 59.71, 58.25, 57.95, 57.89, 60.31, 61.94, 66.67, 74.28, 84.11, 84.08]}


2806_2 (closed) -1 (/308.80664 *1.1) 202307041919
Average Loss: 0.001889534331805115
r0: 0.05 - avg: 0.05027816444635391 - var: 1.6764495285315206e-06
r0: 0.06 - avg: 0.060626644641160965 - var: 3.2602833925921004e-06
r0: 0.07 - avg: 0.07091768831014633 - var: 2.763617430900922e-06
r0: 0.08 - avg: 0.08072991669178009 - var: 3.7813967992406106e-06
r0: 0.09 - avg: 0.09134738147258759 - var: 2.988174628626439e-06
r0: 0.1 - avg: 0.10152789205312729 - var: 3.0706282814207952e-06
r0: 0.11 - avg: 0.11137084662914276 - var: 3.52664301317418e-06
r0: 0.12 - avg: 0.1210784837603569 - var: 4.0546337913838215e-06
r0: 0.13 - avg: 0.1307814121246338 - var: 4.813582563656382e-06
r0: 0.14 - avg: 0.14031600952148438 - var: 5.327683538780548e-06
r0: 0.15 - avg: 0.1500685065984726 - var: 5.97946427660645e-06
r0: 0.16 - avg: 0.15987922251224518 - var: 7.180253305705264e-06
r0: 0.17 - avg: 0.16968998312950134 - var: 7.837402336008381e-06
r0: 0.18 - avg: 0.179732546210289 - var: 8.354658348252997e-06
r0: 0.19 - avg: 0.18916650116443634 - var: 7.781794920447282e-06
r0: 0.2 - avg: 0.19839340448379517 - var: 7.625904345331946e-06
{'0.001': [55.42, 40.11, 39.15, 34.59, 32.7, 30.48, 31.2, 33.57, 34.38, 34.17, 32.76, 28.92, 28.26, 27.42, 28.41, 24.48],
 '0.002': [87.7, 71.05, 69.49, 65.59, 61.87, 58.9, 59.8, 62.26, 61.12, 63.07, 59.59, 55.6, 53.11, 52.84, 52.18, 46.2],
 '0.005': [99.91, 99.13, 99.31, 98.92, 98.11, 97.63, 96.88, 96.79, 96.7, 96.4, 95.89, 93.91, 92.2, 90.79, 91.3, 88.36],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 100.0, 100.0, 99.97, 99.91, 99.94, 99.91, 99.85, 99.82]}


2806_2 (closed) 0 (/308.80664 *1.1) 202307041918
Average Loss: 0.0021057714497652665
r0: 0.05 - avg: 0.05050337687134743 - var: 2.309289811819326e-06
r0: 0.06 - avg: 0.0604262612760067 - var: 4.004079528385773e-06
r0: 0.07 - avg: 0.07061831653118134 - var: 3.5222997212258633e-06
r0: 0.08 - avg: 0.0809679627418518 - var: 3.3799403809098294e-06
r0: 0.09 - avg: 0.09107894450426102 - var: 3.881589236698346e-06
r0: 0.1 - avg: 0.10124565660953522 - var: 4.2272431528544985e-06
r0: 0.11 - avg: 0.11129388213157654 - var: 4.985078703612089e-06
r0: 0.12 - avg: 0.12116190791130066 - var: 5.698922905139625e-06
r0: 0.13 - avg: 0.13078823685646057 - var: 6.686804226774257e-06
r0: 0.14 - avg: 0.14071160554885864 - var: 7.3082019298453815e-06
r0: 0.15 - avg: 0.15032297372817993 - var: 8.758146577747539e-06
r0: 0.16 - avg: 0.16034024953842163 - var: 9.830806448007934e-06
r0: 0.17 - avg: 0.1701730489730835 - var: 1.0976835255860351e-05
r0: 0.18 - avg: 0.18003331124782562 - var: 1.1037547665182501e-05
r0: 0.19 - avg: 0.18937060236930847 - var: 9.852177754510194e-06
r0: 0.2 - avg: 0.1983611285686493 - var: 9.484205293119885e-06
{'0.001': [48.36, 35.7, 39.42, 36.54, 34.02, 32.1, 29.82, 30.21, 29.67, 29.79, 28.41, 26.79, 22.68, 24.42, 26.28, 23.64],
 '0.002': [79.9, 65.89, 68.77, 65.41, 62.44, 59.56, 56.77, 55.33, 55.09, 54.19, 51.7, 50.05, 45.12, 46.65, 48.0, 44.79], 
 '0.005': [99.46, 98.89, 99.13, 98.8, 97.36, 96.1, 94.3, 93.52, 93.28, 92.11, 90.4, 88.78, 86.65, 87.22, 88.15, 84.7],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 100.0, 99.97, 100.0, 99.88, 99.64, 99.82, 99.67, 99.73, 99.31]}


2806_2 (closed) 1 (/308.80664 *1.1) 202307041917
Average Loss: 0.0022498073812341874
r0: 0.05 - avg: 0.050499945878982544 - var: 2.3104134925233666e-06
r0: 0.06 - avg: 0.06001665070652962 - var: 4.577739673550241e-06
r0: 0.07 - avg: 0.07058992981910706 - var: 3.414942511881236e-06
r0: 0.08 - avg: 0.08070699125528336 - var: 4.070442173542688e-06
r0: 0.09 - avg: 0.09074079990386963 - var: 4.451964741747361e-06
r0: 0.1 - avg: 0.10111604630947113 - var: 5.120712557982188e-06
r0: 0.11 - avg: 0.11125406622886658 - var: 5.969299309072085e-06
r0: 0.12 - avg: 0.1210983395576477 - var: 6.878860858705593e-06
r0: 0.13 - avg: 0.13075895607471466 - var: 7.786033165757544e-06
r0: 0.14 - avg: 0.1407908797264099 - var: 9.39600431593135e-06
r0: 0.15 - avg: 0.15059199929237366 - var: 1.0921460670942906e-05
r0: 0.16 - avg: 0.16050048172473907 - var: 1.227681332238717e-05
r0: 0.17 - avg: 0.17041726410388947 - var: 1.3938303709437605e-05
r0: 0.18 - avg: 0.18039570748806 - var: 1.3442980161926243e-05
r0: 0.19 - avg: 0.18952888250350952 - var: 1.2336380677879788e-05
r0: 0.2 - avg: 0.19870518147945404 - var: 1.1031757821911015e-05
{'0.001': [48.6, 35.94, 38.22, 36.09, 35.49, 31.35, 28.83, 27.57, 27.66, 26.73, 25.5, 23.82, 22.86, 23.52, 23.67, 23.94],
 '0.002': [80.53, 65.11, 69.55, 65.65, 64.06, 58.33, 53.98, 51.82, 52.15, 50.08, 46.71, 45.03, 43.68, 43.83, 44.7, 45.84], 
 '0.005': [99.64, 98.02, 99.16, 98.02, 97.03, 94.93, 93.04, 92.26, 91.24, 88.21, 86.68, 84.22, 81.28, 82.45, 84.79, 84.43],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 99.97, 99.97, 100.0, 99.88, 99.76, 99.46, 99.34, 98.89, 99.25, 99.01, 99.07]}


2806_2 (closed) all (/308.80664 *1.1) 202307041921
Average Loss: 0.0020815182658145202
r0: 0.05 - avg: 0.050427161157131195 - var: 2.109820115947514e-06
r0: 0.06 - avg: 0.060356516391038895 - var: 4.01181387132965e-06
r0: 0.07 - avg: 0.07070865482091904 - var: 3.2556038149778033e-06
r0: 0.08 - avg: 0.08080162107944489 - var: 3.7578488445433322e-06
r0: 0.09 - avg: 0.09105571359395981 - var: 3.835501047433354e-06
r0: 0.1 - avg: 0.10129652172327042 - var: 4.169092335359892e-06
r0: 0.11 - avg: 0.11130627244710922 - var: 4.829356839763932e-06
r0: 0.12 - avg: 0.12111290544271469 - var: 5.545404746953864e-06
r0: 0.13 - avg: 0.13077621161937714 - var: 6.428963388316333e-06
r0: 0.14 - avg: 0.14060616493225098 - var: 7.38710423320299e-06
r0: 0.15 - avg: 0.15032783150672913 - var: 8.598711247032043e-06
r0: 0.16 - avg: 0.16023997962474823 - var: 9.831980605667923e-06
r0: 0.17 - avg: 0.17009343206882477 - var: 1.1008838555426337e-05
r0: 0.18 - avg: 0.18005384504795074 - var: 1.1018573786714114e-05
r0: 0.19 - avg: 0.18935534358024597 - var: 1.0012121492763981e-05
r0: 0.2 - avg: 0.1984865814447403 - var: 9.404690899827983e-06
{'0.001': [50.8, 37.25, 38.93, 35.74, 34.07, 31.31, 29.95, 30.45, 30.57, 30.23, 28.89, 26.51, 24.6, 25.12, 26.12, 24.02],
 '0.002': [82.71, 67.35, 69.27, 65.55, 62.79, 58.93, 56.85, 56.47, 56.12, 55.78, 52.67, 50.23, 47.3, 47.77, 48.3, 45.61],
 '0.005': [99.67, 98.68, 99.2, 98.58, 97.5, 96.22, 94.74, 94.19, 93.74, 92.24, 90.99, 88.97, 86.71, 86.82, 88.08, 85.83],
 '0.01': [100.0, 100.0, 100.0, 100.0, 100.0, 99.99, 99.98, 99.99, 99.95, 99.92, 99.77, 99.63, 99.55, 99.61, 99.53, 99.4]}


# 12 incl noise = 308.80664
# 12 excl noise = 273.5929
'''